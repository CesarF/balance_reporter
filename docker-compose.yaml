version: "3"
services:
  app:
    image: ${APP_IMAGE}
    platform: linux/amd64
    ports:
      - 9000:8080
    environment:
      LOG_LEVEL: DEBUG
      MONGO_USER: accounts
      MONGO_PASSWORD: accountspwd
      MONGO_HOST: db
      MONGO_PORT: 27017
      MONGO_DB_NAME: accounts
      AWS_DEFAULT_REGION: ${REGION}
      EMAIL_SENDER: ${EMAIL_SENDER}
      EMAIL_RECIPIENT: ${EMAIL_RECIPIENT}
      # this variable must be obtained from vault or using secrets
      EMAIL_SENDER_PWD: ${EMAIL_SENDER_PWD}
      SMTP_SERVER: ${SMTP_SERVER}
      SMTP_PORT: ${SMTP_PORT}
    volumes:
      - ${VOLUME_PATH}:/app/data/:ro
    depends_on:
      db:
        condition: service_healthy
  db:
    image: mongo:7.0.5
    restart: always
    command: mongod --quiet --logpath /dev/null
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpwd
      MONGO_INITDB_DATABASE: accounts
    ports:
      - 27017:27017
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  admin:
    image: mongo-express:1.0.2-20
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:rootpwd@db:27017
    depends_on:
      db:
        condition: service_healthy
